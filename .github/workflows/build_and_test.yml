name: Build and test

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BUILD_DEPEND_FILE: https://raw.githubusercontent.com/tier4/autoware.proj/main/autoware.proj.repos

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # https://github.com/codecov/codecov-action/issues/190#issuecomment-790729633

      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.1
        with:
          required-ros-distributions: foxy

      - name: Download build_depends.repos
        run: |
          curl -sSL -H "Authorization: token ${{ secrets.REPO_TOKEN }}" ${{ env.BUILD_DEPEND_FILE }} > build_depends.repos

      - name: Run action-ros-ci
        id: action_ros_ci_step
        uses: ros-tooling/action-ros-ci@master
        with:
          package-name: obstacle_stop_planner_refine
          target-ros2-distro: foxy
          vcs-repo-file-url: build_depends.repos
          import-token: ${{ secrets.REPO_TOKEN }}
          colcon-defaults: |
            {
              "build": {
                "mixin": ["coverage-gcc", "coverage-pytest"]
              },
              "test": {
                "mixin": ["coverage-pytest"]
              }
            }
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ros_ws/lcov/total_coverage.info,ros_ws/coveragepy/.coverage
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

      - name: Upload colcon-logs
        uses: actions/upload-artifact@v2
        with:
          name: colcon-logs
          path: ${{ steps.action_ros_ci_step.outputs.ros-workspace-directory-name }}/log
        if: always() # upload the logs even when the build fails
